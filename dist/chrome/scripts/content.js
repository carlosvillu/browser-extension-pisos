!function(){"use strict";var e={16:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.RentalDataAnalyzer=void 0,t.RentalDataAnalyzer=class{logger;propertyExtractor;cacheService;errorHandler;constructor(e,t,n,a){this.logger=e,this.propertyExtractor=t,this.cacheService=n,this.errorHandler=a}async fetchRentalData(e){const t=this.createCacheKey(e);return await this.cacheService.get(t)||this.fetchWithRetry(e,t,1)}async fetchWithRetry(e,t,n){const a={operation:"fetchRentalData",url:e};try{this.logger.log(`Fetching rental data (attempt ${n}): ${e}`);const a=await fetch(e,{method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language":"es-ES,es;q=0.5","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(!a.ok)throw new Error(`HTTP ${a.status}: Failed to fetch rental data`);const r=await a.text(),i=this.parseRentalDataFromHtml(r);return i&&await this.cacheService.set(t,i),i}catch(r){if(this.errorHandler.handleError(r,a),this.errorHandler.shouldRetry(r,n)){const a=this.errorHandler.getRetryDelay(n);return this.logger.log(`Retrying in ${a}ms (attempt ${n+1})`),await this.delay(a),this.fetchWithRetry(e,t,n+1)}return null}}createCacheKey(e){try{const t=new URL(e);return`${t.pathname}${t.search}`}catch{return e}}delay(e){return new Promise((t=>setTimeout(t,e)))}parseRentalDataFromHtml(e){try{const t=(new DOMParser).parseFromString(e,"text/html"),n=this.propertyExtractor.extractPropertiesFromDocument(t);if(0===n.length)return this.logger.log("No rental properties found in response"),null;const a=n.map((e=>e.price)).filter((e=>e>0)).sort(((e,t)=>e-t));if(0===a.length)return this.logger.log("No valid prices found in rental properties"),null;const r=a.reduce(((e,t)=>e+t),0)/a.length,i=a[0],s=a[a.length-1];return this.logger.log(`Rental analysis: ${a.length} properties, avg: ${r}€`),{averagePrice:Math.round(r),minPrice:i,maxPrice:s,sampleSize:a.length,properties:n}}catch(e){return this.logger.error("Error parsing rental data from HTML",e),null}}}},47:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.IntersectionSimpleLazyLoader=void 0,t.IntersectionSimpleLazyLoader=class{logger;observer=null;processedElements=new Set;constructor(e){this.logger=e}observeElements(e,t){this.observer||(this.observer=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&!this.processedElements.has(e.target)&&(this.processedElements.add(e.target),t(e.target),this.observer.unobserve(e.target))}))}),{rootMargin:"100px",threshold:.1})),e.forEach((e=>{this.processedElements.has(e)||this.observer.observe(e)}))}disconnect(){this.observer&&(this.observer.disconnect(),this.processedElements.clear(),this.observer=null)}}},75:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.RobustErrorHandler=void 0,t.RobustErrorHandler=class{logger;maxRetries=3;baseDelay=1e3;errorCounts=new Map;constructor(e){this.logger=e}handleError(e,t){const n=`${t.operation}-${e.name}`,a=this.errorCounts.get(n)||0;this.errorCounts.set(n,a+1),this.logger.error(`Error in ${t.operation}`,{error:e.message,stack:e.stack,context:t,errorCount:a+1}),e.message.includes("fetch")?this.logger.error("Network error detected",{url:t.url,propertyId:t.propertyId}):(e.message.includes("parse")||e.message.includes("DOM"))&&this.logger.error("Parsing error detected",{operation:t.operation,additionalData:t.additionalData})}shouldRetry(e,t){return!(t>=this.maxRetries||!(e.message.includes("fetch")||e.message.includes("network")||e.message.includes("timeout"))&&!(e.message.includes("500")||e.message.includes("502")||e.message.includes("503")||e.message.includes("504")))}getRetryDelay(e){const t=this.baseDelay*Math.pow(2,e);return t+.1*Math.random()*t}getErrorStats(){return Object.fromEntries(this.errorCounts)}clearErrorStats(){this.errorCounts.clear(),this.logger.log("Error statistics cleared")}}},169:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.ProfitabilityCalculator=void 0;const a=n(294);t.ProfitabilityCalculator=class{logger;config;DEFAULT_CONFIG={propertyManagementRate:.09,insuranceRate:.002,propertyTaxRate:.007,communityFeesWithGarage:80,communityFeesWithoutGarage:40,vacancyMaintenanceRate:.05};configService;userConfig;constructor(e,t={}){this.logger=e,this.config=t,this.config={...this.DEFAULT_CONFIG,...t},this.configService=new a.ConfigService}async calculateProfitability(e,t){this.userConfig||(this.userConfig=await this.configService.getConfig());const n=this.userConfig.expenseConfig,a=t.averagePrice,r=12*a,i=e.price,s=r/i*100,o=this.calculateMonthlyExpenses(e,a,n),l=r-12*o,c=Math.max(0,l/i*100),{recommendation:g,riskLevel:d}=this.evaluateInvestment(s,c,t.sampleSize);return this.logger.log(`Profitability calculation for ${e.id}: Gross ${s.toFixed(2)}%, Net ${c.toFixed(2)}%`),{propertyId:e.id,purchasePrice:i,estimatedRent:a,grossYield:Math.round(100*s)/100,netYield:Math.round(100*c)/100,monthlyExpenses:o,recommendation:g,riskLevel:d}}calculateMonthlyExpenses(e,t,n){let a=0;return a+=n.propertyManagementMonthly||150,a+=n.insuranceMonthly||50,a+=n.propertyTaxMonthly||100,a+=n.communityFees||60,a+=t*(n.vacancyMaintenanceRate||.05),a+=t*(n.maintenanceContingencyRate||.01),Math.round(a)}evaluateInvestment(e,t,n){let a,r;const i=this.userConfig?.profitabilityThresholds||{excellent:6,good:4,fair:2};return a=t>=i.excellent?"excellent":t>=i.good?"good":t>=i.fair?"fair":"poor",r=n<3||e>8||t<1?"high":t>=3&&e<=7?"low":"medium",{recommendation:a,riskLevel:r}}}},273:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.IdealistaInvestmentAnalyzer=void 0;const a=n(420),r=n(75),i=n(169),s=n(922),o=n(16),l=n(47),c=n(516),g=n(841),d=n(530),u=n(677);t.IdealistaInvestmentAnalyzer=class{languageService;logger;urlAnalyzer;propertyExtractor;rentalDataAnalyzer;profitabilityCalculator;urlGenerator;uiRenderer;cacheService;errorHandler;lazyLoader;constructor(e){this.languageService=e,this.logger=new d.Logger("IdealistaInvestmentAnalyzer"),this.urlAnalyzer=new c.UrlAnalyzer(this.logger),this.propertyExtractor=new s.PropertyExtractor(this.logger),this.cacheService=new a.ContentCacheService(this.logger),this.errorHandler=new r.RobustErrorHandler(this.logger),this.rentalDataAnalyzer=new o.RentalDataAnalyzer(this.logger,this.propertyExtractor,this.cacheService,this.errorHandler),this.profitabilityCalculator=new i.ProfitabilityCalculator(this.logger),this.urlGenerator=new g.CrossReferenceUrlGenerator(this.logger),this.uiRenderer=new u.InvestmentUIRenderer(this.logger,this.languageService),this.lazyLoader=new l.IntersectionSimpleLazyLoader(this.logger)}initialize(){this.logger.log("Initializing Idealista Investment Analyzer"),this.urlAnalyzer.isIdealistaPropertyPage()?(this.logger.log("Idealista property page detected"),this.analyzeCurrentPage()):this.logger.log("Not an Idealista property page")}analyzeCurrentPage(){const e=this.urlAnalyzer.analyzeCurrentPage();e.searchType&&this.startPropertyAnalysis(e)}startPropertyAnalysis(e){this.logger.log(`Starting analysis for ${e.searchType} properties in ${e.location}`);const t=this.propertyExtractor.extractPropertiesFromPage();this.logger.log(`Found ${t.length} properties on page`),t.length>0&&this.processProperties(t,e)}processProperties(e,t){if(this.logger.log("Processing properties for investment analysis"),"venta"!==t.searchType)return void this.logger.log("Skipping analysis - not a sale search");const n=e.map((e=>({property:e,element:document.querySelector(`article.item[data-element-id="${e.id}"]`)}))).filter((e=>null!==e.element));if(0===n.length)return this.logger.log("No property elements found, processing directly with delays"),void this.processBatch(e,t);const a=n.map((e=>e.element));this.lazyLoader.observeElements(a,(e=>{const a=n.find((t=>t.element===e))?.property;a&&this.analyzePropertyProfitability(a,t)}))}async processBatch(e,t){this.logger.log("Processing properties in batch mode with delays");for(const n of e)await this.analyzePropertyProfitability(n,t),await this.delay(2e3)}delay(e){return new Promise((t=>setTimeout(t,e)))}async analyzePropertyProfitability(e,t){this.logger.log(`Analyzing property ${e.id}: ${e.price}€ - ${e.rooms} hab., ${e.size}m²`);const n={operation:"analyzePropertyProfitability",propertyId:e.id,additionalData:{price:e.price,rooms:e.rooms,size:e.size}};try{await this.uiRenderer.renderLoadingBadge(e);const n=this.urlGenerator.generateRentalUrl(t.location,e);this.logger.log(`Fetching rental data from: ${n}`);const a=await this.rentalDataAnalyzer.fetchRentalData(n);if(a&&a.sampleSize>0){const t=await this.profitabilityCalculator.calculateProfitability(e,a);this.logger.log(`Profitability analysis for ${e.id}:`,t),await this.uiRenderer.renderBadge(e,t)}else this.logger.log(`No rental data found for property ${e.id}`),this.handleMissingData(e)}catch(t){this.errorHandler.handleError(t,n),this.handleAnalysisError(e)}}handleMissingData(e){this.uiRenderer.renderNoDataBadge(e)}handleAnalysisError(e){this.uiRenderer.renderErrorBadge(e)}}},294:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigService=void 0;class n{static STORAGE_KEY="investmentAnalysisConfig";static DEFAULT_CONFIG={expenseConfig:{propertyManagementMonthly:150,insuranceMonthly:50,propertyTaxMonthly:100,communityFees:60,vacancyMaintenanceRate:.05,maintenanceContingencyRate:.01},mortgageConfig:{loanToValueRatio:.8,managementFeesRate:.1,interestRate:2.45},profitabilityThresholds:{excellent:6,good:4,fair:2},displayOptions:{showBadges:!0,showModal:!0,showLoadingStates:!0}};async getConfig(){try{const e=(await chrome.storage.sync.get(n.STORAGE_KEY))[n.STORAGE_KEY];if(!e)return n.DEFAULT_CONFIG;const t=this.migrateOldConfig(e);return{...n.DEFAULT_CONFIG,...t}}catch(e){return console.error("Error loading config:",e),n.DEFAULT_CONFIG}}migrateOldConfig(e){if(e.expenseConfig&&e.expenseConfig.communityFeesWithGarage&&!e.expenseConfig.communityFees){const t=Math.round(((e.expenseConfig.communityFeesWithGarage||80)+(e.expenseConfig.communityFeesWithoutGarage||40))/2);e.expenseConfig.communityFees=t,delete e.expenseConfig.communityFeesWithGarage,delete e.expenseConfig.communityFeesWithoutGarage}return e}async updateConfig(e){try{const t={...await this.getConfig(),...e};await chrome.storage.sync.set({[n.STORAGE_KEY]:t})}catch(e){throw console.error("Error saving config:",e),e}}async resetToDefaults(){try{await chrome.storage.sync.set({[n.STORAGE_KEY]:n.DEFAULT_CONFIG})}catch(e){throw console.error("Error resetting config:",e),e}}}t.ConfigService=n},420:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ContentCacheService=void 0,t.ContentCacheService=class{logger;constructor(e){this.logger=e}async get(e){try{const t=await chrome.runtime.sendMessage({type:"CACHE_GET",key:e});if(!t.success)throw new Error(t.error);return t.data}catch(t){return this.logger.error(`Error getting cache for key ${e}:`,t),null}}async set(e,t,n){try{const a=await chrome.runtime.sendMessage({type:"CACHE_SET",key:e,data:t,ttl:n});if(!a.success)throw new Error(a.error)}catch(t){this.logger.error(`Error setting cache for key ${e}:`,t)}}async clear(){try{const e=await chrome.runtime.sendMessage({type:"CACHE_CLEAR"});if(!e.success)throw new Error(e.error)}catch(e){this.logger.error("Error clearing cache:",e)}}async cleanup(){try{const e=await chrome.runtime.sendMessage({type:"CACHE_CLEANUP"});if(!e.success)throw new Error(e.error)}catch(e){this.logger.error("Error during cache cleanup:",e)}}}},516:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.UrlAnalyzer=void 0,t.UrlAnalyzer=class{logger;constructor(e){this.logger=e}analyzeCurrentPage(){const e=new URL(window.location.href);return this.analyzeUrl(e)}analyzeUrl(e){const t=e.pathname,n=e.searchParams;let a=null;t.includes("/venta-viviendas/")?a="venta":t.includes("/alquiler-viviendas/")&&(a="alquiler");const r=this.extractLocationFromUrl(t),i=n.toString().length>0,s={isIdealista:"www.idealista.com"===e.hostname&&(t.includes("/venta-viviendas/")||t.includes("/alquiler-viviendas/")),searchType:a,location:r,hasFilters:i};return this.logger.log("URL Analysis:",s),s}isIdealistaPropertyPage(){const e=window.location.hostname,t=window.location.pathname;return"www.idealista.com"===e&&(t.includes("/venta-viviendas/")||t.includes("/alquiler-viviendas/"))}extractLocationFromUrl(e){const t=e.match(/\/(venta|alquiler)-viviendas\/([^/]+)/);return t?t[2]:null}}},530:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=void 0,t.Logger=class{context;constructor(e){this.context=e}log(e,t){const n=`[${(new Date).toISOString()}][${this.context}]`;t?console.log(`${n} ${e}`,t):console.log(`${n} ${e}`)}error(e,t){const n=`[${(new Date).toISOString()}][${this.context}][ERROR]`;t?console.error(`${n} ${e}`,t):console.error(`${n} ${e}`)}}},677:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.InvestmentUIRenderer=void 0;const a=n(294);t.InvestmentUIRenderer=class{logger;languageService;configService;userConfig;constructor(e,t){this.logger=e,this.languageService=t,this.configService=new a.ConfigService}async renderBadge(e,t){if(this.userConfig||(this.userConfig=await this.configService.getConfig()),!this.userConfig.displayOptions.showBadges)return;const n=this.findPropertyElement(e.id);if(!n)return void this.logger.error(`Property element not found for ID: ${e.id}`);this.removeBadge(e);const a=this.createAnalysisButton(e,t),r=n.querySelector(".item-description");r?(r.parentNode?.insertBefore(a,r.nextSibling),this.logger.log(`Investment analysis button rendered for property ${e.id}: ${t.recommendation}`)):this.logger.error(`Description container not found for property ${e.id}`)}async renderLoadingBadge(e){if(this.userConfig||(this.userConfig=await this.configService.getConfig()),!this.userConfig.displayOptions.showLoadingStates)return;const t=this.findPropertyElement(e.id);if(!t)return;this.removeBadge(e);const n=document.createElement("div");n.className="investment-badge investment-badge--loading",n.setAttribute("data-property-id",e.id),n.textContent=this.languageService.getMessage("analyzing");const a=t.querySelector(".item-multimedia");a&&(a.appendChild(n),this.logger.log(`Loading badge rendered for property ${e.id}`))}renderNoDataBadge(e){const t=this.findPropertyElement(e.id);if(!t)return;this.removeBadge(e);const n=document.createElement("div");n.className="investment-badge investment-badge--no-data",n.setAttribute("data-property-id",e.id),n.innerHTML=`\n      <div class="investment-badge__content">\n        <div class="investment-badge__icon">📊</div>\n        <div class="investment-badge__text">${this.languageService.getMessage("noRentalData")}</div>\n      </div>\n    `;const a=t.querySelector(".item-multimedia");a&&(a.appendChild(n),this.logger.log(`No data badge rendered for property ${e.id}`))}renderErrorBadge(e){const t=this.findPropertyElement(e.id);if(!t)return;this.removeBadge(e);const n=document.createElement("div");n.className="investment-badge investment-badge--error",n.setAttribute("data-property-id",e.id),n.innerHTML=`\n      <div class="investment-badge__content">\n        <div class="investment-badge__icon">⚠️</div>\n        <div class="investment-badge__text">${this.languageService.getMessage("analysisError")}</div>\n      </div>\n    `;const a=t.querySelector(".item-multimedia");a&&(a.appendChild(n),this.logger.log(`Error badge rendered for property ${e.id}`))}removeBadge(e){document.querySelectorAll(`[data-property-id="${e.id}"]`).forEach((e=>e.remove()))}findPropertyElement(e){return document.querySelector(`article.item[data-element-id="${e}"]`)}createAnalysisButton(e,t){const n=document.createElement("div");n.className="investment-analysis-container",n.setAttribute("data-property-id",t.propertyId);const a=document.createElement("button");return a.className=`investment-analysis-button investment-analysis-button--${t.recommendation}`,a.innerHTML=`\n      <div class="investment-analysis-button__content">\n        <div class="investment-analysis-button__yield">\n          <span class="investment-analysis-button__yield-label">${this.languageService.getMessage("netProfitability")}</span>\n          <span class="investment-analysis-button__yield-value">${t.netYield}%</span>\n        </div>\n        <div class="investment-analysis-button__recommendation">\n          ${this.getRecommendationText(t.recommendation)}\n        </div>\n        <div class="investment-analysis-button__icon">📊</div>\n      </div>\n    `,a.addEventListener("click",(async n=>{n.preventDefault(),n.stopPropagation(),this.userConfig||(this.userConfig=await this.configService.getConfig()),this.userConfig.displayOptions.showModal&&(this.openAnalysisModal(e,t),this.logger.log(`Investment modal opened for property ${e.id}`))})),n.appendChild(a),n}openAnalysisModal(e,t){new r(this.logger,this.languageService).openModal(e,t)}getRecommendationText(e){switch(e){case"excellent":return this.languageService.getMessage("excellentInvestment");case"good":return this.languageService.getMessage("goodInvestment");case"fair":return this.languageService.getMessage("regularInvestment");case"poor":return this.languageService.getMessage("badInvestment");default:return this.languageService.getMessage("unknownInvestment")}}};class r{logger;languageService;constructor(e,t){this.logger=e,this.languageService=t}openModal(e,t){const n=document.querySelector(".investment-modal-overlay");n&&n.remove();const a=document.createElement("div");a.className="investment-modal-overlay";const r=document.createElement("div");r.className="investment-modal",r.innerHTML=this.createModalContent(e,t),a.appendChild(r),document.body.appendChild(a),this.addEventListeners(r,a)}createModalContent(e,t){return`\n      <div class="investment-modal__header">\n        <h3 class="investment-modal__title">${this.languageService.getMessage("investmentAnalysisTitle")}</h3>\n        <button class="investment-modal__close">×</button>\n      </div>\n      \n      <div class="investment-modal__content">\n        <div class="investment-modal__property-info">\n          <h4>${e.title}</h4>\n          <p class="investment-modal__property-details">\n            ${e.rooms?e.rooms+this.languageService.getMessage("roomsSuffix"):""} \n            ${e.size?e.size+this.languageService.getMessage("sizeSuffix"):""}\n            ${e.floor?" • "+e.floor:""}\n          </p>\n        </div>\n\n        <div class="investment-modal__analysis">\n          <div class="investment-modal__recommendation investment-modal__recommendation--${t.recommendation}">\n            <div class="investment-modal__recommendation-text">\n              ${this.getRecommendationText(t.recommendation)}\n            </div>\n            <div class="investment-modal__recommendation-yield">\n              ${this.languageService.getMessage("netProfitability")} ${t.netYield}%\n            </div>\n          </div>\n\n          <div class="investment-modal__details-grid">\n            <div class="investment-modal__detail-item">\n              <span class="investment-modal__label">${this.languageService.getMessage("purchasePrice")}</span>\n              <span class="investment-modal__value">${this.languageService.formatCurrency(t.purchasePrice)}</span>\n            </div>\n            \n            <div class="investment-modal__detail-item">\n              <span class="investment-modal__label">${this.languageService.getMessage("monthlyRentalEstimate")}</span>\n              <span class="investment-modal__value">${this.languageService.formatCurrency(t.estimatedRent)}</span>\n            </div>\n            \n            <div class="investment-modal__detail-item">\n              <span class="investment-modal__label">${this.languageService.getMessage("monthlyExpensesEstimate")}</span>\n              <span class="investment-modal__value">${this.languageService.formatCurrency(t.monthlyExpenses)}</span>\n            </div>\n            \n            <div class="investment-modal__divider"></div>\n            \n            <div class="investment-modal__detail-item">\n              <span class="investment-modal__label">${this.languageService.getMessage("grossAnnualProfitability")}</span>\n              <span class="investment-modal__value">${t.grossYield}%</span>\n            </div>\n            \n            <div class="investment-modal__detail-item investment-modal__detail-item--highlight">\n              <span class="investment-modal__label">${this.languageService.getMessage("netAnnualProfitability")}</span>\n              <span class="investment-modal__value">${t.netYield}%</span>\n            </div>\n            \n            <div class="investment-modal__risk investment-modal__risk--${t.riskLevel}">\n              <div class="investment-modal__risk-dot"></div>\n              <span>${this.languageService.getMessage("riskLevel")}${t.riskLevel.toUpperCase()}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `}addEventListeners(e,t){const n=e.querySelector(".investment-modal__close");n?.addEventListener("click",(()=>{t.remove()})),t.addEventListener("click",(e=>{e.target===t&&t.remove()}));const a=e=>{"Escape"===e.key&&(t.remove(),document.removeEventListener("keydown",a))};document.addEventListener("keydown",a)}getRecommendationText(e){switch(e){case"excellent":return this.languageService.getMessage("excellentInvestment");case"good":return this.languageService.getMessage("goodInvestment");case"fair":return this.languageService.getMessage("regularInvestment");case"poor":return this.languageService.getMessage("badInvestment");default:return this.languageService.getMessage("unknownInvestment")}}}},714:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LanguageService=void 0;class n{static SUPPORTED_LANGUAGES=["es","en","fr"];static DEFAULT_LANGUAGE="en";static LOCALE_MAP={es:"es-ES",en:"en-US",fr:"fr-FR"};currentLanguage=n.DEFAULT_LANGUAGE;messages={};initialized=!1;constructor(){this.loadMessages()}async initialize(){if(!this.initialized){try{const e=await chrome.storage.local.get(["language"]);if(e.language&&this.isValidLanguage(e.language))this.currentLanguage=e.language;else{const e=this.getBrowserLanguage();this.currentLanguage=this.isValidLanguage(e)?e:n.DEFAULT_LANGUAGE,await chrome.storage.local.set({language:this.currentLanguage})}}catch(e){console.warn("Error initializing language:",e),this.currentLanguage=n.DEFAULT_LANGUAGE}this.initialized=!0}}isValidLanguage(e){return n.SUPPORTED_LANGUAGES.includes(e)}static getSupportedLanguages(){return[...n.SUPPORTED_LANGUAGES]}getBrowserLanguage(){return"undefined"!=typeof chrome&&chrome.i18n&&chrome.i18n.getUILanguage?chrome.i18n.getUILanguage().split("-")[0]:navigator.language?.split("-")[0]||"en"}loadMessages(){this.messages.es={appName:"Análisis de Inversión Inmobiliaria",popupTitle:"Configuración - Análisis de Inversión",configurationTitle:"Configuración de Análisis",languageSelector:"Idioma",languageSpanish:"Español",languageEnglish:"Inglés",languageFrench:"Francés",estimatedExpensesTitle:"Gastos Estimados",propertyManagementLabel:"Gestión inmobiliaria (€)",monthlyFixedCost:"Coste mensual fijo",insuranceLabel:"Seguro (€)",ibiLabel:"IBI (€)",vacancyLabel:"Vacancia (%)",rentalPercentage:"% del alquiler",repairsLabel:"Reparaciones y contingencias (%)",repairsHelp:"% del alquiler para calentadores, averías, mejoras, etc.",communityLabel:"Comunidad (€)",communityHelp:"Gastos de comunidad mensual",mortgageConfigTitle:"Configuración de Hipoteca",financingLabel:"Financiación (%)",priceFinnancedPercentage:"% del precio financiado",interestLabel:"Interés (%)",annualTinHelp:"TIN anual de la hipoteca",managementFeesLabel:"Gastos de gestión (%)",managementFeesHelp:"% del precio de compra (notaría, registro, tasación, etc.)",profitabilityThresholdsTitle:"Umbrales de Rentabilidad",excellentLabel:"Excelente (%)",goodLabel:"Buena (%)",regularLabel:"Regular (%)",displayOptionsTitle:"Opciones de Visualización",showProfitabilityIndicators:"Mostrar indicadores de rentabilidad",allowDetailsModal:"Permitir modal de detalles",showLoadingStates:"Mostrar estados de carga",restoreButton:"Restaurar",saveButton:"Guardar",errorLoadingConfig:"Error al cargar la configuración",configSavedSuccessfully:"Configuración guardada correctamente",errorSavingConfig:"Error al guardar la configuración",configRestoredSuccessfully:"Configuración restaurada a valores por defecto",errorRestoringConfig:"Error al restaurar la configuración",analyzing:"Analizando...",noRentalData:"Sin datos de alquiler",analysisError:"Error en análisis",netProfitability:"Rentabilidad Neta:",excellentInvestment:"EXCELENTE INVERSIÓN",goodInvestment:"BUENA INVERSIÓN",regularInvestment:"INVERSIÓN REGULAR",badInvestment:"MALA INVERSIÓN",unknownInvestment:"DESCONOCIDO",investmentAnalysisTitle:"Análisis de Inversión",roomsSuffix:" hab.",sizeSuffix:"m²",purchasePrice:"Precio de compra",monthlyRentalEstimate:"Alquiler estimado mensual",monthlyExpensesEstimate:"Gastos mensuales estimados",grossAnnualProfitability:"Rentabilidad bruta anual",netAnnualProfitability:"Rentabilidad neta anual",riskLevel:"Nivel de riesgo: "},this.messages.en={appName:"Real Estate Investment Analysis",popupTitle:"Configuration - Investment Analysis",configurationTitle:"Analysis Configuration",languageSelector:"Language",languageSpanish:"Spanish",languageEnglish:"English",languageFrench:"French",estimatedExpensesTitle:"Estimated Expenses",propertyManagementLabel:"Property management (€)",monthlyFixedCost:"Monthly fixed cost",insuranceLabel:"Insurance (€)",ibiLabel:"Property tax (€)",vacancyLabel:"Vacancy (%)",rentalPercentage:"% of rental income",repairsLabel:"Repairs and contingencies (%)",repairsHelp:"% of rental for heating, breakdowns, improvements, etc.",communityLabel:"Community fees (€)",communityHelp:"Monthly community expenses",mortgageConfigTitle:"Mortgage Configuration",financingLabel:"Financing (%)",priceFinnancedPercentage:"% of price financed",interestLabel:"Interest (%)",annualTinHelp:"Annual mortgage interest rate",managementFeesLabel:"Management fees (%)",managementFeesHelp:"% of purchase price (notary, registry, appraisal, etc.)",profitabilityThresholdsTitle:"Profitability Thresholds",excellentLabel:"Excellent (%)",goodLabel:"Good (%)",regularLabel:"Regular (%)",displayOptionsTitle:"Display Options",showProfitabilityIndicators:"Show profitability indicators",allowDetailsModal:"Allow details modal",showLoadingStates:"Show loading states",restoreButton:"Restore",saveButton:"Save",errorLoadingConfig:"Error loading configuration",configSavedSuccessfully:"Configuration saved successfully",errorSavingConfig:"Error saving configuration",configRestoredSuccessfully:"Configuration restored to default values",errorRestoringConfig:"Error restoring configuration",analyzing:"Analyzing...",noRentalData:"No rental data",analysisError:"Analysis error",netProfitability:"Net Profitability:",excellentInvestment:"EXCELLENT INVESTMENT",goodInvestment:"GOOD INVESTMENT",regularInvestment:"REGULAR INVESTMENT",badInvestment:"BAD INVESTMENT",unknownInvestment:"UNKNOWN",investmentAnalysisTitle:"Investment Analysis",roomsSuffix:" rooms",sizeSuffix:"m²",purchasePrice:"Purchase price",monthlyRentalEstimate:"Monthly rental estimate",monthlyExpensesEstimate:"Monthly expenses estimate",grossAnnualProfitability:"Gross annual profitability",netAnnualProfitability:"Net annual profitability",riskLevel:"Risk level: "},this.messages.fr={appName:"Analyse d'Investissement Immobilier",popupTitle:"Configuration - Analyse d'Investissement",configurationTitle:"Configuration de l'Analyse",languageSelector:"Langue",languageSpanish:"Espagnol",languageEnglish:"Anglais",languageFrench:"Français",estimatedExpensesTitle:"Dépenses Estimées",propertyManagementLabel:"Gestion immobilière (€)",monthlyFixedCost:"Coût mensuel fixe",insuranceLabel:"Assurance (€)",ibiLabel:"Taxe foncière (€)",vacancyLabel:"Vacance (%)",rentalPercentage:"% du revenu locatif",repairsLabel:"Réparations et contingences (%)",repairsHelp:"% du loyer pour chauffage, pannes, améliorations, etc.",communityLabel:"Charges de copropriété (€)",communityHelp:"Charges mensuelles de copropriété",mortgageConfigTitle:"Configuration Hypothécaire",financingLabel:"Financement (%)",priceFinnancedPercentage:"% du prix financé",interestLabel:"Intérêt (%)",annualTinHelp:"Taux d'intérêt annuel de l'hypothèque",managementFeesLabel:"Frais de gestion (%)",managementFeesHelp:"% du prix d'achat (notaire, registre, évaluation, etc.)",profitabilityThresholdsTitle:"Seuils de Rentabilité",excellentLabel:"Excellent (%)",goodLabel:"Bon (%)",regularLabel:"Régulier (%)",displayOptionsTitle:"Options d'Affichage",showProfitabilityIndicators:"Afficher les indicateurs de rentabilité",allowDetailsModal:"Permettre le modal de détails",showLoadingStates:"Afficher les états de chargement",restoreButton:"Restaurer",saveButton:"Sauvegarder",errorLoadingConfig:"Erreur lors du chargement de la configuration",configSavedSuccessfully:"Configuration sauvegardée avec succès",errorSavingConfig:"Erreur lors de la sauvegarde de la configuration",configRestoredSuccessfully:"Configuration restaurée aux valeurs par défaut",errorRestoringConfig:"Erreur lors de la restauration de la configuration",analyzing:"Analyse en cours...",noRentalData:"Aucune donnée locative",analysisError:"Erreur d'analyse",netProfitability:"Rentabilité Nette:",excellentInvestment:"EXCELLENT INVESTISSEMENT",goodInvestment:"BON INVESTISSEMENT",regularInvestment:"INVESTISSEMENT RÉGULIER",badInvestment:"MAUVAIS INVESTISSEMENT",unknownInvestment:"INCONNU",investmentAnalysisTitle:"Analyse d'Investissement",roomsSuffix:" pièces",sizeSuffix:"m²",purchasePrice:"Prix d'achat",monthlyRentalEstimate:"Estimation du loyer mensuel",monthlyExpensesEstimate:"Estimation des dépenses mensuelles",grossAnnualProfitability:"Rentabilité annuelle brute",netAnnualProfitability:"Rentabilité annuelle nette",riskLevel:"Niveau de risque: "}}async setLanguage(e){if(this.isValidLanguage(e)){this.currentLanguage=e;try{await chrome.storage.local.set({language:e}),this.notifyLanguageChange(e)}catch(e){console.warn("Error saving language preference:",e)}}}notifyLanguageChange(e){chrome.tabs.query({active:!0,currentWindow:!0},(t=>{const n=t[0];n?.id&&n.url?(console.log("Current tab URL:",n.url),n.url.includes("idealista.com")?(console.log("Sending language change message to Idealista tab. Language:",e),chrome.tabs.sendMessage(n.id,{type:"LANGUAGE_CHANGED",language:e}).then((()=>{console.log("Language change message sent successfully")})).catch((e=>{console.warn("Error sending language change message:",e)}))):console.log("Not an Idealista tab, skipping message send")):console.warn("No active tab found or tab has no URL")}))}getLanguage(){return this.currentLanguage}async loadLanguageFromStorage(){try{const e=await chrome.storage.local.get(["language"]);e.language&&this.isValidLanguage(e.language)&&(this.currentLanguage=e.language)}catch(e){console.warn("Error loading language from storage:",e)}}getMessage(e){return this.messages[this.currentLanguage]?.[e]||e}formatCurrency(e,t="EUR"){try{const a=n.LOCALE_MAP[this.currentLanguage]||n.LOCALE_MAP[n.DEFAULT_LANGUAGE];return new Intl.NumberFormat(a,{style:"currency",currency:t,minimumFractionDigits:0,maximumFractionDigits:0}).format(e)}catch(t){return console.warn("Error formatting currency:",t),`${e.toLocaleString()}€`}}formatPercentage(e,t=2){try{const a=n.LOCALE_MAP[this.currentLanguage]||n.LOCALE_MAP[n.DEFAULT_LANGUAGE];return new Intl.NumberFormat(a,{style:"percent",minimumFractionDigits:t,maximumFractionDigits:t}).format(e/100)}catch(n){return console.warn("Error formatting percentage:",n),`${e.toFixed(t)}%`}}}t.LanguageService=n},841:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.CrossReferenceUrlGenerator=void 0,t.CrossReferenceUrlGenerator=class{logger;constructor(e){this.logger=e}generateRentalUrl(e,t){return this.buildUrl("https://www.idealista.com/alquiler-viviendas",e,t)}generateSaleUrl(e,t){return this.buildUrl("https://www.idealista.com/venta-viviendas",e,t)}buildUrl(e,t,n){if(!t)return this.logger.error("No location provided for URL generation"),`${e}/`;let a=`${e}/${t}/`;const r=new URLSearchParams;if(n.rooms&&n.rooms>0&&r.append("habitaciones",n.rooms.toString()),n.size&&n.size>0){const e=Math.max(1,n.size-20),t=n.size+20;r.append("superficie",`${e}-${t}`)}const i=r.toString();return i&&(a+=`?${i}`),a}}},922:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.PropertyExtractor=void 0,t.PropertyExtractor=class{logger;constructor(e){this.logger=e}extractPropertiesFromPage(){const e=[],t=document.querySelectorAll("article.item[data-element-id]");return this.logger.log(`Found ${t.length} property elements on page`),t.forEach((t=>{try{const n=this.extractPropertyData(t);n&&e.push(n)}catch(e){this.logger.error("Error extracting property data",e)}})),e}extractPropertiesFromDocument(e){const t=[];return e.querySelectorAll("article.item[data-element-id]").forEach((e=>{try{const n=this.extractPropertyDataFromElement(e);n&&t.push(n)}catch(e){this.logger.error("Error extracting property data from element",e)}})),t}extractPropertyData(e){return this.extractPropertyDataFromElement(e)}extractPropertyDataFromElement(e){const t=e.getAttribute("data-element-id");if(!t)return null;const n=e.querySelector(".item-price"),a=n?.textContent?.replace(/[€\s]/g,"").replace(".","")||"0",r=Number.parseInt(a,10)||0,i=e.querySelector(".item-link"),s=i?.textContent?.trim()||"",o=i?.href||"",l=e.querySelectorAll(".item-detail");let c=null,g=null,d=null;l.forEach((e=>{const t=e.textContent?.trim()||"";if(t.includes("hab.")){const e=t.match(/(\d+)\s*hab\./);c=e?Number.parseInt(e[1],10):null}else if(t.includes("m²")){const e=t.match(/(\d+)\s*m²/);g=e?Number.parseInt(e[1],10):null}else(t.includes("Planta")||t.includes("Bajo"))&&(d=t)}));const u=!!e.querySelector(".item-parking"),m=e.querySelector(".item-description .ellipsis"),h=m?.textContent?.trim()||"",p=e.querySelectorAll(".listing-tags"),y=Array.from(p).map((e=>e.textContent?.trim()||"")),v=this.extractLocationFromTitle(s);return{id:t,title:s,price:r,rooms:c,size:g,floor:d,hasGarage:u,description:h,url:o,tags:y,location:v}}extractLocationFromTitle(e){const t=e.split(",");return t.length>=2?t[t.length-2].trim():""}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}!function(){const e=n(273),t=n(714);let a,r;async function i(){r=new t.LanguageService,await r.initialize(),a=new e.IdealistaInvestmentAnalyzer(r),a.initialize()}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",i):i(),chrome.runtime.onMessage.addListener(((t,n,i)=>{console.log("Content script received message:",t),"LANGUAGE_CHANGED"===t.type&&(console.log("Processing language change to:",t.language),r.loadLanguageFromStorage().then((()=>{console.log("Language service updated, current language:",r.getLanguage());const t=document.querySelectorAll("[data-property-id]");console.log("Removing existing badges:",t.length),t.forEach((e=>e.remove())),a&&(console.log("Re-initializing analyzer with new language"),a=new e.IdealistaInvestmentAnalyzer(r),a.initialize())})))}))}()}();